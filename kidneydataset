{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4a7a3c39",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:21.712455Z",
     "iopub.status.busy": "2025-08-18T14:24:21.712257Z",
     "iopub.status.idle": "2025-08-18T14:24:30.597829Z",
     "shell.execute_reply": "2025-08-18T14:24:30.597051Z"
    },
    "papermill": {
     "duration": 8.89081,
     "end_time": "2025-08-18T14:24:30.599215",
     "exception": false,
     "start_time": "2025-08-18T14:24:21.708405",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "import os\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.nn.functional as F\n",
    "from torch.utils.data import Dataset, DataLoader, random_split\n",
    "from torchvision import transforms\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from PIL import Image"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ccc34946",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:30.605709Z",
     "iopub.status.busy": "2025-08-18T14:24:30.605428Z",
     "iopub.status.idle": "2025-08-18T14:24:30.617397Z",
     "shell.execute_reply": "2025-08-18T14:24:30.616693Z"
    },
    "papermill": {
     "duration": 0.016132,
     "end_time": "2025-08-18T14:24:30.618423",
     "exception": false,
     "start_time": "2025-08-18T14:24:30.602291",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Files inside dataset folder:\n",
      "['kits.json', 'kits19_png', 'LICENSE']\n",
      "\n",
      "Zip files found: []\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import zipfile\n",
    "\n",
    "# Path to dataset\n",
    "data_path = \"/kaggle/input/kits19-png-zipped\"\n",
    "\n",
    "# List files inside the dataset folder\n",
    "print(\"Files inside dataset folder:\")\n",
    "print(os.listdir(data_path))\n",
    "\n",
    "# If it's zipped, check contents of the first zip\n",
    "zip_files = [f for f in os.listdir(data_path) if f.endswith(\".zip\")]\n",
    "print(\"\\nZip files found:\", zip_files)\n",
    "\n",
    "if zip_files:\n",
    "    zip_path = os.path.join(data_path, zip_files[0])\n",
    "    with zipfile.ZipFile(zip_path, 'r') as z:\n",
    "        files_inside = z.namelist()\n",
    "        print(f\"\\nTotal files in {zip_files[0]}:\", len(files_inside))\n",
    "        print(\"\\nFirst 20 files:\")\n",
    "        print(files_inside[:20])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6c0d34b6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:30.624106Z",
     "iopub.status.busy": "2025-08-18T14:24:30.623876Z",
     "iopub.status.idle": "2025-08-18T14:24:30.651357Z",
     "shell.execute_reply": "2025-08-18T14:24:30.650700Z"
    },
    "papermill": {
     "duration": 0.03144,
     "end_time": "2025-08-18T14:24:30.652394",
     "exception": false,
     "start_time": "2025-08-18T14:24:30.620954",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total cases: 300\n",
      "First 10 cases/folders: ['case_00255', 'case_00147', 'case_00091', 'case_00250', 'case_00046', 'case_00231', 'case_00057', 'case_00283', 'case_00259', 'case_00083']\n",
      "\n",
      "Exploring sample case: /kaggle/input/kits19-png-zipped/kits19_png/case_00255\n",
      "Number of files in sample case: 1\n",
      "First 10 files: ['imaging']\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "\n",
    "data_path = \"/kaggle/input/kits19-png-zipped/kits19_png\"\n",
    "\n",
    "# List first level folders/files\n",
    "cases = os.listdir(data_path)\n",
    "print(\"Total cases:\", len(cases))\n",
    "print(\"First 10 cases/folders:\", cases[:10])\n",
    "\n",
    "# Explore one case\n",
    "sample_case = os.path.join(data_path, cases[0])\n",
    "print(\"\\nExploring sample case:\", sample_case)\n",
    "\n",
    "sample_files = os.listdir(sample_case)\n",
    "print(\"Number of files in sample case:\", len(sample_files))\n",
    "print(\"First 10 files:\", sample_files[:10])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e1ea3689",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:30.658101Z",
     "iopub.status.busy": "2025-08-18T14:24:30.657874Z",
     "iopub.status.idle": "2025-08-18T14:24:30.682792Z",
     "shell.execute_reply": "2025-08-18T14:24:30.682252Z"
    },
    "papermill": {
     "duration": 0.028809,
     "end_time": "2025-08-18T14:24:30.683779",
     "exception": false,
     "start_time": "2025-08-18T14:24:30.654970",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of PNG slices in imaging: 180\n",
      "First 10 slices: ['case_00255_slice_105.png', 'case_00255_slice_070.png', 'case_00255_slice_019.png', 'case_00255_slice_027.png', 'case_00255_slice_103.png', 'case_00255_slice_177.png', 'case_00255_slice_097.png', 'case_00255_slice_030.png', 'case_00255_slice_075.png', 'case_00255_slice_161.png']\n"
     ]
    }
   ],
   "source": [
    "# Dive into imaging folder of sample case\n",
    "imaging_path = os.path.join(sample_case, \"imaging\")\n",
    "\n",
    "if os.path.isdir(imaging_path):\n",
    "    imaging_files = os.listdir(imaging_path)\n",
    "    print(\"Number of PNG slices in imaging:\", len(imaging_files))\n",
    "    print(\"First 10 slices:\", imaging_files[:10])\n",
    "else:\n",
    "    print(\"No imaging folder found inside this case\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0750d8c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:30.689644Z",
     "iopub.status.busy": "2025-08-18T14:24:30.689312Z",
     "iopub.status.idle": "2025-08-18T14:24:30.695491Z",
     "shell.execute_reply": "2025-08-18T14:24:30.694741Z"
    },
    "papermill": {
     "duration": 0.010163,
     "end_time": "2025-08-18T14:24:30.696520",
     "exception": false,
     "start_time": "2025-08-18T14:24:30.686357",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Contents inside case folder: ['imaging']\n",
      "\n",
      "imaging contains 180 files\n",
      "Sample files: ['case_00255_slice_105.png', 'case_00255_slice_070.png', 'case_00255_slice_019.png', 'case_00255_slice_027.png', 'case_00255_slice_103.png', 'case_00255_slice_177.png', 'case_00255_slice_097.png', 'case_00255_slice_030.png', 'case_00255_slice_075.png', 'case_00255_slice_161.png']\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "\n",
    "case_path = \"/kaggle/input/kits19-png-zipped/kits19_png/case_00255\"\n",
    "\n",
    "# List everything inside case\n",
    "print(\"Contents inside case folder:\", os.listdir(case_path))\n",
    "\n",
    "# Check if segmentation folder exists\n",
    "for sub in os.listdir(case_path):\n",
    "    sub_path = os.path.join(case_path, sub)\n",
    "    if os.path.isdir(sub_path):\n",
    "        print(f\"\\n{sub} contains {len(os.listdir(sub_path))} files\")\n",
    "        print(\"Sample files:\", os.listdir(sub_path)[:10])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "25e360c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:30.702517Z",
     "iopub.status.busy": "2025-08-18T14:24:30.702049Z",
     "iopub.status.idle": "2025-08-18T14:24:30.723447Z",
     "shell.execute_reply": "2025-08-18T14:24:30.722716Z"
    },
    "papermill": {
     "duration": 0.025619,
     "end_time": "2025-08-18T14:24:30.724684",
     "exception": false,
     "start_time": "2025-08-18T14:24:30.699065",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Type of kits.json: <class 'list'>\n",
      "Number of entries: 210\n",
      "\n",
      "First entry keys: dict_keys(['case_id', 'age_at_nephrectomy', 'gender', 'body_mass_index', 'comorbidities', 'smoking_history', 'age_when_quit_smoking', 'pack_years', 'chewing_tobacco_use', 'alcohol_use', 'intraoperative_complications', 'hospitalization', 'ischemia_time', 'radiographic_size', 'pathologic_size', 'malignant', 'pathology_t_stage', 'pathology_n_stage', 'pathology_m_stage', 'tumor_histologic_subtype', 'tumor_necrosis', 'tumor_isup_grade', 'clavien_surgical_complications', 'er_visit', 'readmission', 'estimated_blood_loss', 'surgery_type', 'surgical_procedure', 'surgical_approach', 'operative_time', 'cytoreductive', 'positive_resection_margins', 'last_preop_egfr', 'first_postop_egfr', 'last_postop_egfr', 'vital_status', 'vital_days_after_surgery', 'voxel_spacing'])\n",
      "\n",
      "First entry sample: {'case_id': 'case_00000', 'age_at_nephrectomy': 49, 'gender': 'male', 'body_mass_index': 29.47, 'comorbidities': {'myocardial_infarction': False, 'congestive_heart_failure': False, 'peripheral_vascular_disease': False, 'cerebrovascular_disease': False, 'dementia': False, 'copd': False, 'connective_tissue_disease': False, 'peptic_ulcer_disease': False, 'uncomplicated_diabetes_mellitus': False, 'diabetes_mellitus_with_end_organ_damage': False, 'chronic_kidney_disease': False, 'hemiplegia_from_stroke': False, 'leukemia': False, 'malignant_lymphoma': False, 'localized_solid_tumor': False, 'metastatic_solid_tumor': False, 'mild_liver_disease': False, 'moderate_to_severe_liver_disease': False, 'aids': False}, 'smoking_history': 'never_smoked', 'age_when_quit_smoking': 'not_applicable', 'pack_years': 0, 'chewing_tobacco_use': 'never_or_not_in_last_3mo', 'alcohol_use': 'two_or_less_daily', 'intraoperative_complications': {'blood_transfusion': False, 'injury_to_surrounding_organ': False, 'cardiac_event': False}, 'hospitalization': 2, 'ischemia_time': 20, 'radiographic_size': 2.4, 'pathologic_size': 2.1, 'malignant': True, 'pathology_t_stage': '1a', 'pathology_n_stage': '0', 'pathology_m_stage': '0', 'tumor_histologic_subtype': 'clear_cell_rcc', 'tumor_necrosis': False, 'tumor_isup_grade': 3, 'clavien_surgical_complications': '0', 'er_visit': False, 'readmission': False, 'estimated_blood_loss': 400, 'surgery_type': 'robotic', 'surgical_procedure': 'partial_nephrectomy', 'surgical_approach': 'Transperitoneal', 'operative_time': 324, 'cytoreductive': False, 'positive_resection_margins': False, 'last_preop_egfr': {'value': 77.0, 'days_before_nephrectomy': 54}, 'first_postop_egfr': {'value': 76.0, 'days_before_nephrectomy': 184}, 'last_postop_egfr': {'value': '>=90', 'days_before_nephrectomy': 1420}, 'vital_status': 'censored', 'vital_days_after_surgery': 1420, 'voxel_spacing': {'x_spacing': 0.919921875, 'y_spacing': 0.919921875, 'z_spacing': 0.5}}\n"
     ]
    }
   ],
   "source": [
    "import json\n",
    "\n",
    "json_path = \"/kaggle/input/kits19-png-zipped/kits.json\"\n",
    "\n",
    "with open(json_path, \"r\") as f:\n",
    "    kits_info = json.load(f)\n",
    "\n",
    "print(\"Type of kits.json:\", type(kits_info))\n",
    "print(\"Number of entries:\", len(kits_info))\n",
    "\n",
    "# Peek into first entry\n",
    "print(\"\\nFirst entry keys:\", kits_info[0].keys())\n",
    "print(\"\\nFirst entry sample:\", kits_info[0])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "32b77628",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:30.730925Z",
     "iopub.status.busy": "2025-08-18T14:24:30.730431Z",
     "iopub.status.idle": "2025-08-18T14:24:31.180433Z",
     "shell.execute_reply": "2025-08-18T14:24:31.179787Z"
    },
    "papermill": {
     "duration": 0.456053,
     "end_time": "2025-08-18T14:24:31.183448",
     "exception": false,
     "start_time": "2025-08-18T14:24:30.727395",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import random\n",
    "import cv2\n",
    "import os\n",
    "\n",
    "# Pick a random case\n",
    "cases_path = \"/kaggle/input/kits19-png-zipped/kits19_png\"\n",
    "case = random.choice(os.listdir(cases_path))\n",
    "imaging_path = os.path.join(cases_path, case, \"imaging\")\n",
    "\n",
    "# Pick a random slice\n",
    "slice_file = random.choice(os.listdir(imaging_path))\n",
    "slice_path = os.path.join(imaging_path, slice_file)\n",
    "\n",
    "# Load and display\n",
    "img = cv2.imread(slice_path, cv2.IMREAD_GRAYSCALE)\n",
    "\n",
    "plt.figure(figsize=(6,6))\n",
    "plt.imshow(img, cmap=\"gray\")\n",
    "plt.title(f\"{case} - {slice_file}\")\n",
    "plt.axis(\"off\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "82c8a91d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:31.194230Z",
     "iopub.status.busy": "2025-08-18T14:24:31.193683Z",
     "iopub.status.idle": "2025-08-18T14:24:31.200748Z",
     "shell.execute_reply": "2025-08-18T14:24:31.200201Z"
    },
    "papermill": {
     "duration": 0.013263,
     "end_time": "2025-08-18T14:24:31.201777",
     "exception": false,
     "start_time": "2025-08-18T14:24:31.188514",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Completed\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "# =========================\n",
    "# Dataset\n",
    "# =========================\n",
    "class KidneyTumorDataset(Dataset):\n",
    "    def __init__(self, root_dir, transform=None):\n",
    "        self.root_dir = root_dir\n",
    "        self.cases = sorted(os.listdir(root_dir))\n",
    "        self.transform = transform\n",
    "        self.samples = []\n",
    "\n",
    "        for case in self.cases:\n",
    "            case_path = os.path.join(root_dir, case)\n",
    "            if not os.path.isdir(case_path):\n",
    "                continue\n",
    "\n",
    "            img_dir = os.path.join(case_path, \"imaging\")\n",
    "            mask_dir = os.path.join(case_path, \"segmentation\")\n",
    "\n",
    "            if not os.path.exists(mask_dir):\n",
    "                continue  # skip if no segmentation\n",
    "\n",
    "            img_files = sorted(os.listdir(img_dir))\n",
    "            mask_files = sorted(os.listdir(mask_dir))\n",
    "\n",
    "            for img_file, mask_file in zip(img_files, mask_files):\n",
    "                self.samples.append((\n",
    "                    os.path.join(img_dir, img_file),\n",
    "                    os.path.join(mask_dir, mask_file)\n",
    "                ))\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.samples)\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        img_path, mask_path = self.samples[idx]\n",
    "\n",
    "        image = Image.open(img_path).convert(\"L\")\n",
    "        mask = Image.open(mask_path).convert(\"L\")\n",
    "\n",
    "        if self.transform:\n",
    "            image = self.transform(image)\n",
    "            mask = self.transform(mask)\n",
    "\n",
    "        # Ensure mask is binary\n",
    "        mask = (mask > 0.5).float()\n",
    "\n",
    "        return image, mask\n",
    "\n",
    "print(\"Completed\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "93db45c5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:31.211854Z",
     "iopub.status.busy": "2025-08-18T14:24:31.211536Z",
     "iopub.status.idle": "2025-08-18T14:24:36.234005Z",
     "shell.execute_reply": "2025-08-18T14:24:36.233202Z"
    },
    "papermill": {
     "duration": 5.028815,
     "end_time": "2025-08-18T14:24:36.235266",
     "exception": false,
     "start_time": "2025-08-18T14:24:31.206451",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset size: 45424\n",
      "Train size: 36339\n",
      "Val size: 9085\n"
     ]
    }
   ],
   "source": [
    "# Transform\n",
    "transform = transforms.Compose([\n",
    "    transforms.Resize((128, 128)),\n",
    "    transforms.ToTensor()\n",
    "])\n",
    "\n",
    "# Load dataset\n",
    "dataset = KidneyTumorDataset(\n",
    "    \"/kaggle/input/kits19-png-zipped/kits19_png\", \n",
    "    transform=transform\n",
    ")\n",
    "\n",
    "# Train/Val split\n",
    "train_len = int(0.8 * len(dataset))\n",
    "val_len = len(dataset) - train_len\n",
    "train_ds, val_ds = random_split(dataset, [train_len, val_len])\n",
    "\n",
    "train_loader = DataLoader(train_ds, batch_size=8, shuffle=True)\n",
    "val_loader   = DataLoader(val_ds, batch_size=8, shuffle=False)\n",
    "\n",
    "print(\"Dataset size:\", len(dataset))\n",
    "print(\"Train size:\", len(train_ds))\n",
    "print(\"Val size:\", len(val_ds))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c20ef909",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:36.245693Z",
     "iopub.status.busy": "2025-08-18T14:24:36.245479Z",
     "iopub.status.idle": "2025-08-18T14:24:36.248831Z",
     "shell.execute_reply": "2025-08-18T14:24:36.248259Z"
    },
    "papermill": {
     "duration": 0.009797,
     "end_time": "2025-08-18T14:24:36.249984",
     "exception": false,
     "start_time": "2025-08-18T14:24:36.240187",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # =========================\n",
    "# # Double Convolution Block\n",
    "# # =========================\n",
    "# class DoubleConv(nn.Module):\n",
    "#     def __init__(self, in_channels, out_channels):\n",
    "#         super(DoubleConv, self).__init__()\n",
    "#         self.double_conv = nn.Sequential(\n",
    "#             nn.Conv2d(in_channels, out_channels, kernel_size=3, stride=1, padding=1, bias=False),\n",
    "#             nn.BatchNorm2d(out_channels),\n",
    "#             nn.ReLU(inplace=True),\n",
    "#             nn.Conv2d(out_channels, out_channels, kernel_size=3, stride=1, padding=1, bias=False),\n",
    "#             nn.BatchNorm2d(out_channels),\n",
    "#             nn.ReLU(inplace=True)\n",
    "#         )\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         return self.double_conv(x)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "bb36374f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:36.260371Z",
     "iopub.status.busy": "2025-08-18T14:24:36.260172Z",
     "iopub.status.idle": "2025-08-18T14:24:36.263627Z",
     "shell.execute_reply": "2025-08-18T14:24:36.262949Z"
    },
    "papermill": {
     "duration": 0.00982,
     "end_time": "2025-08-18T14:24:36.264632",
     "exception": false,
     "start_time": "2025-08-18T14:24:36.254812",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # =========================\n",
    "# # Attention Block\n",
    "# # =========================\n",
    "# class AttentionBlock(nn.Module):\n",
    "#     def __init__(self, F_g, F_l, F_int):\n",
    "#         super(AttentionBlock, self).__init__()\n",
    "#         self.W_g = nn.Sequential(\n",
    "#             nn.Conv2d(F_g, F_int, kernel_size=1, stride=1, padding=0, bias=True),\n",
    "#             nn.BatchNorm2d(F_int)\n",
    "#         )\n",
    "        \n",
    "#         self.W_x = nn.Sequential(\n",
    "#             nn.Conv2d(F_l, F_int, kernel_size=1, stride=1, padding=0, bias=True),\n",
    "#             nn.BatchNorm2d(F_int)\n",
    "#         )\n",
    "        \n",
    "#         self.psi = nn.Sequential(\n",
    "#             nn.Conv2d(F_int, 1, kernel_size=1, stride=1, padding=0, bias=True),\n",
    "#             nn.BatchNorm2d(1),\n",
    "#             nn.Sigmoid()\n",
    "#         )\n",
    "        \n",
    "#         self.relu = nn.ReLU(inplace=True)\n",
    "\n",
    "#     def forward(self, g, x):\n",
    "#         # g = decoder feature (up-sampled)\n",
    "#         # x = encoder skip connection\n",
    "#         g1 = self.W_g(g)\n",
    "#         x1 = self.W_x(x)\n",
    "#         psi = self.relu(g1 + x1)\n",
    "#         psi = self.psi(psi)\n",
    "#         return x * psi\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "943d88ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:36.274789Z",
     "iopub.status.busy": "2025-08-18T14:24:36.274594Z",
     "iopub.status.idle": "2025-08-18T14:24:36.278197Z",
     "shell.execute_reply": "2025-08-18T14:24:36.277630Z"
    },
    "papermill": {
     "duration": 0.009941,
     "end_time": "2025-08-18T14:24:36.279203",
     "exception": false,
     "start_time": "2025-08-18T14:24:36.269262",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # =========================\n",
    "# # Attention U-Net\n",
    "# # =========================\n",
    "# class AttentionUNet(nn.Module):\n",
    "#     def __init__(self, in_channels=1, out_channels=1, features=(64, 128, 256, 512)):\n",
    "#         super(AttentionUNet, self).__init__()\n",
    "#         self.downs = nn.ModuleList()\n",
    "#         self.pools = nn.ModuleList()\n",
    "#         ch = in_channels\n",
    "\n",
    "#         # Encoder\n",
    "#         for feat in features:\n",
    "#             self.downs.append(DoubleConv(ch, feat))\n",
    "#             self.pools.append(nn.MaxPool2d(2))\n",
    "#             ch = feat\n",
    "\n",
    "#         self.bottleneck = DoubleConv(features[-1], features[-1]*2)\n",
    "\n",
    "#         # Decoder\n",
    "#         self.ups = nn.ModuleList()\n",
    "#         self.att_blocks = nn.ModuleList()\n",
    "#         self.up_convs = nn.ModuleList()\n",
    "\n",
    "#         ch = features[-1]*2\n",
    "#         for feat in reversed(features):\n",
    "#             self.ups.append(nn.ConvTranspose2d(ch, feat, kernel_size=2, stride=2))\n",
    "#             self.att_blocks.append(AttentionBlock(F_g=feat, F_l=feat, F_int=feat//2))\n",
    "#             self.up_convs.append(DoubleConv(ch, feat))\n",
    "#             ch = feat\n",
    "\n",
    "#         self.final_conv = nn.Conv2d(features[0], out_channels, kernel_size=1)\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         skip_connections = []\n",
    "\n",
    "#         # Encoder\n",
    "#         for down, pool in zip(self.downs, self.pools):\n",
    "#             x = down(x)\n",
    "#             skip_connections.append(x)\n",
    "#             x = pool(x)\n",
    "\n",
    "#         x = self.bottleneck(x)\n",
    "#         skip_connections = skip_connections[::-1]\n",
    "\n",
    "#         # Decoder with attention\n",
    "#         for up, att, conv, skip in zip(self.ups, self.att_blocks, self.up_convs, skip_connections):\n",
    "#             x = up(x)\n",
    "#             if x.size(-1) != skip.size(-1) or x.size(-2) != skip.size(-2):\n",
    "#                 x = F.interpolate(x, size=skip.shape[-2:], mode=\"bilinear\", align_corners=False)\n",
    "#             skip = att(x, skip)   # apply attention\n",
    "#             x = torch.cat([skip, x], dim=1)\n",
    "#             x = conv(x)\n",
    "\n",
    "#         return self.final_conv(x)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "4fec5564",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:36.290001Z",
     "iopub.status.busy": "2025-08-18T14:24:36.289772Z",
     "iopub.status.idle": "2025-08-18T14:24:36.292625Z",
     "shell.execute_reply": "2025-08-18T14:24:36.292127Z"
    },
    "papermill": {
     "duration": 0.009076,
     "end_time": "2025-08-18T14:24:36.293637",
     "exception": false,
     "start_time": "2025-08-18T14:24:36.284561",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "\n",
    "# # Use Attention U-Net instead of U-Net\n",
    "# model = AttentionUNet(in_channels=1, out_channels=1).to(device)\n",
    "\n",
    "# optimizer = torch.optim.Adam(model.parameters(), lr=1e-4)\n",
    "# scaler = torch.amp.GradScaler(\"cuda\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8c8dcb62",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-18T14:24:36.303851Z",
     "iopub.status.busy": "2025-08-18T14:24:36.303628Z",
     "iopub.status.idle": "2025-08-18T14:24:36.308250Z",
     "shell.execute_reply": "2025-08-18T14:24:36.307684Z"
    },
    "papermill": {
     "duration": 0.010997,
     "end_time": "2025-08-18T14:24:36.309291",
     "exception": false,
     "start_time": "2025-08-18T14:24:36.298294",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# import torch\n",
    "# import torch.nn as nn\n",
    "# import torch.optim as optim\n",
    "# from torch.utils.data import DataLoader, random_split\n",
    "# import matplotlib.pyplot as plt\n",
    "\n",
    "# # ====================================\n",
    "# # Model (choose UNet or AttentionUNet)\n",
    "# # ====================================\n",
    "# # Example: model = UNet(in_channels=1, out_channels=1).to(device)\n",
    "# # Or: model = AttentionUNet(in_channels=1, out_channels=1).to(device)\n",
    "\n",
    "# # =========================\n",
    "# # Training Setup\n",
    "# # =========================\n",
    "# device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "\n",
    "# # Loss: BCE + Dice\n",
    "# bce_loss = nn.BCEWithLogitsLoss()\n",
    "\n",
    "# def dice_coef(preds, targets, smooth=1e-6):\n",
    "#     preds = torch.sigmoid(preds)\n",
    "#     preds = (preds > 0.5).float()\n",
    "#     intersection = (preds * targets).sum()\n",
    "#     return (2. * intersection + smooth) / (preds.sum() + targets.sum() + smooth)\n",
    "\n",
    "# def bce_dice_loss(preds, targets):\n",
    "#     return bce_loss(preds, targets) + (1 - dice_coef(preds, targets))\n",
    "\n",
    "# optimizer = optim.Adam(model.parameters(), lr=1e-4)\n",
    "# scaler = torch.amp.GradScaler(\"cuda\")  # ✅ new AMP API\n",
    "\n",
    "# # =========================\n",
    "# # Training Loop\n",
    "# # =========================\n",
    "# best_dice = 0.0\n",
    "# num_epochs = 5\n",
    "\n",
    "# for epoch in range(num_epochs):\n",
    "#     model.train()\n",
    "#     train_loss = 0.0\n",
    "\n",
    "#     for imgs, msks in train_loader:\n",
    "#         imgs, msks = imgs.to(device), msks.to(device)\n",
    "\n",
    "#         optimizer.zero_grad()\n",
    "#         with torch.amp.autocast(\"cuda\"):  # ✅ new AMP API\n",
    "#             preds = model(imgs)\n",
    "#             loss = bce_dice_loss(preds, msks)\n",
    "\n",
    "#         scaler.scale(loss).backward()\n",
    "#         scaler.step(optimizer)\n",
    "#         scaler.update()\n",
    "\n",
    "#         train_loss += loss.item()\n",
    "\n",
    "#     # -------------------------\n",
    "#     # Validation Loop\n",
    "#     # -------------------------\n",
    "#     model.eval()\n",
    "#     val_dice = 0.0\n",
    "#     with torch.no_grad():\n",
    "#         for imgs, msks in val_loader:\n",
    "#             imgs, msks = imgs.to(device), msks.to(device)\n",
    "#             preds = model(imgs)\n",
    "#             val_dice += dice_coef(preds, msks)\n",
    "\n",
    "#     val_dice /= len(val_loader)\n",
    "\n",
    "#     # -------------------------\n",
    "#     # Logging\n",
    "#     # -------------------------\n",
    "#     print(f\"Epoch {epoch+1}/{num_epochs} \"\n",
    "#           f\"Train Loss={train_loss/len(train_loader):.4f} \"\n",
    "#           f\"Val Dice={val_dice:.4f}\")\n",
    "\n",
    "#     # -------------------------\n",
    "#     # Save Best Model\n",
    "#     # -------------------------\n",
    "#     if val_dice > best_dice:\n",
    "#         best_dice = val_dice\n",
    "#         torch.save(model.state_dict(), \"best_model.pth\")\n",
    "#         print(\"✅ Model saved with Dice:\", round(best_dice.item(), 4))\n",
    "\n",
    "# # =========================\n",
    "# # Visualization\n",
    "# # =========================\n",
    "# def visualize_sample(index=0):\n",
    "#     model.eval()\n",
    "#     image, mask = dataset[index]\n",
    "\n",
    "#     image_input = image.unsqueeze(0).to(device)\n",
    "#     with torch.no_grad():\n",
    "#         pred = model(image_input)\n",
    "#         pred_mask = torch.sigmoid(pred).squeeze().cpu().numpy()\n",
    "#         pred_mask = (pred_mask > 0.5).astype(np.uint8)\n",
    "\n",
    "#     image_np = image.squeeze().cpu().numpy()\n",
    "#     mask_np = mask.squeeze().cpu().numpy()\n",
    "\n",
    "#     fig, axs = plt.subplots(1, 3, figsize=(12, 4))\n",
    "#     axs[0].imshow(image_np, cmap=\"gray\")\n",
    "#     axs[0].set_title(\"Image\")\n",
    "\n",
    "#     axs[1].imshow(mask_np, cmap=\"gray\")\n",
    "#     axs[1].set_title(\"Ground Truth\")\n",
    "\n",
    "#     axs[2].imshow(pred_mask, cmap=\"gray\")\n",
    "#     axs[2].set_title(\"Prediction\")\n",
    "\n",
    "#     for ax in axs:\n",
    "#         ax.axis(\"off\")\n",
    "#     plt.tight_layout()\n",
    "#     plt.show()\n",
    "\n",
    "# # Example visualization\n",
    "# visualize_sample(index=10)\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 7110178,
     "sourceId": 11364540,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31090,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 19.967556,
   "end_time": "2025-08-18T14:24:37.633417",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-08-18T14:24:17.665861",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
